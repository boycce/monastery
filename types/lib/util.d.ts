import { ObjectId } from "mongodb";
export function cast(obj: any): any;
export function deepCopy(obj: any): any;
export function deepFind(obj: any, path: any): any;
export function forEach(obj: any, iteratee: any, context: any): any;
export function forceArray(value: any): any[];
export function id(str: string | ObjectId): ObjectId;
export function inArray(array: any, key: any, value: any): any;
export function isArray(value: any): value is any[];
export function isArrayLike(collection: any): boolean;
export function isDefined(value: any): boolean;
export function isEmpty(obj: any): boolean;
export function isFunction(value: any): boolean;
export function isId(value: any): boolean;
export function isHex24(value: any): boolean;
export function isNumber(value: any): boolean;
export function isObject(value: any): boolean;
export function isObjectAndNotID(value: any): boolean;
export function isRegex(value: any): boolean;
export function isSchema(value: any): boolean;
export function isString(value: any): boolean;
export function isSubdocument(value: any): boolean;
export function isSubdocument2dsphere(value: any): any;
export function isUndefined(value: any): value is undefined;
export function omit(obj: any, fields: any): any;
export function parseData(obj: any, parseBracketToDotNotation: any, parseDotNotation: any): any;
export function parseDotNotation(obj: any): any;
export function parseBracketNotation(obj: any): any;
export function parseBracketToDotNotation(obj: any): {};
export function pick(obj: any, keys: any): {};
export function removeUndefined(variable: any): any;
export function runSeries(tasks: any, hookName: any, data: any): Promise<any>;
export function setDeepValue(obj: any, path: any, value: any, onlyUndefined: any, onlyUndefinedNull: any, ignoreEmptyArrays: any): any;
export function setTimeoutPromise(ms: any): Promise<any>;
export function toArray(variable: any): any[];
export function ucFirst(string: any): any;
export function wait(ms: any): Promise<any>;
//# sourceMappingURL=util.d.ts.map